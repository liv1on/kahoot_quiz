# Generated by Django 4.1 on 2022-08-28 18:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Quiz Title')),
                ('group', models.ManyToManyField(related_name='group_quizzes', to='auth.group')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('timer', models.FloatField(default=20.0, help_text='Maximum allowed time for question')),
                ('answer_score', models.FloatField(default=0, help_text='Score for the answer')),
                ('score', models.FloatField(blank=True, default=100.0, help_text='Maximum score')),
                ('is_active', models.BooleanField(default=False, verbose_name='Active Status')),
                ('quiz', models.ManyToManyField(related_name='question', to='kahoot.quiz')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('answer_title', models.CharField(max_length=255, verbose_name='Answer Text')),
                ('response_timer', models.FloatField(default=20.0, help_text='Time take to answer')),
                ('answer_score', models.PositiveSmallIntegerField(default=100, help_text='Score for the answer')),
                ('is_corect', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='answer', to='kahoot.question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('second_name', models.CharField(blank=True, default='', max_length=100)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('question_score', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('answer_table', models.JSONField(blank=True, default=dict, null=True)),
                ('overall_score', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('raiting', models.PositiveSmallIntegerField(blank=True, editable=False, null=True)),
                ('raiting_group', models.PositiveSmallIntegerField(blank=True, editable=False, null=True)),
                ('passed_quiz', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('quizzes_and_answers', models.JSONField(blank=True, default=dict, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Leader',
            fields=[
            ],
            options={
                'verbose_name': 'Leader',
                'verbose_name_plural': 'Leaders',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kahoot.user',),
        ),
    ]
